# Configuracoes de conexao com o banco de dados
spring.datasource.url=jdbc:mysql://localhost/springfood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=senha123

server.port=8081

##### Configuracoes do Hibernate (JPA) #######

# Schema generation do hibernate
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

# Cria migracao a partir de DDL gerado por schema generation
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

# Define o local onde o Flyway irá procurar os scripts de migração SQL.
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# Habilita ou desabilita a execução automática do Flyway no startup da aplicação.
spring.flyway.enabled=false

# Quando true, mostra no console as queries SQL geradas pelo Hibernate.
spring.jpa.show-sql=true

# Define o dialeto do Hibernate, ou seja, como ele deve gerar SQL compatível com um banco específico.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

##############################################

# Configuracao do pool de conexoes do Hikari
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000

#Habilita erros na desserialização de propriedades inexistentes ou ignoradas
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

#Lançar uma exceção (NoHandlerFoundException) quando nenhuma rota é encontrada para a requisição.
spring.mvc.throw-exception-if-no-handler-found=true

#Desativa o mapeamento automático de recursos estáticos, visto nossa API ser REST
spring.web.resources.add-mappings=false